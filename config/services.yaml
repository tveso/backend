
parameters:
    locale: 'es'

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
    App\:
        resource: '../src/**'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'
    updatetvshowsjob:
        class: 'App\Jobs\UpdateTmdbJobs\UpdateTvShowsJob'
    entitymanager:
        class: App\EntityManager
        public: true
    MongoDB\Driver\Manager:
        class: MongoDB\Driver\Manager
        arguments:
        - '%env(MONGO_URI)%'
    MongoDB\Collection:
        class: MongoDB\Collection
        arguments:
        - '@MongoDB\Driver\Manager'
        - 'mymoviedb'
        - 'app_cache'
    Doctrine\Common\Cache\MongoDBCache:
        class:  Doctrine\Common\Cache\MongoDBCache
        arguments:
        - '@MongoDB\Collection'
    MongoDB\Client:
        class: 'MongoDB\Client'
        arguments:
        - '%env(MONGO_URI)%'
    GuzzleHttp\Client:
        class: 'GuzzleHttp\Client'
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    App\Auth\:
      resource: '../src/Auth'
    App\Auth\UserProvider:
      class: 'App\Auth\UserProvider'
    App\Services\TheMovieDb\TheMovieDbClient:
        arguments:
        - '@GuzzleHttp\Client'
        - '%env(TMDB_API)%'
    App\Event\:
        resource: '../src/Event'
    my_converter:
          class: App\Converter\ObjectConverter
          tags:
              - { name: request.param_converter, priority: 0, converter: class }
    entitiy_converter:
          class: App\Converter\EntityConverter
          tags:
            - {name: request.entity_converter, priorioty: 0, converter: entityConverter}
    Abraham\TwitterOAuth\TwitterOAuth:
      class: 'Abraham\TwitterOAuth\TwitterOAuth'
      arguments:
      - '%env(TWITTER_CONSUMER_KEY)%'
      - '%env(TWITTER_CONSUMER_SECRET)%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
